version: "3.9"

# DEVELOPENT â€” INTENDED FOR DEVELOPMENT ONLY, FOR PRODUCTION SEE "DOCKER-COMPOSE.PROD.YML" (unfinished)
services:
  db-postgresql:
    user: "${UID}:${GID}" # run as current user instead of root (see .env)
    container_name: mfat-db-postgresql
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      # Ports are loaded from the .env. If no port was specified, default values are used
      - "${DB_POSTGRESQL_PORT_DOCKER:-64298}:${DB_POSTGRESQL_PORT_HOST:-64298}"
    volumes:
      # Postgres data volume will persist the data in the database
      - ./src/db_postgresql/postgres_data:/var/lib/postgresql/data:rw # REMOVE THIS LINE IF YOU WANT TO START FRESH EVERY TIME (HANDY FOR DB TESTING)
    command: 
    stop_grace_period: 500ms
    networks:
      db-network:
        aliases:
          - ${POSTGRES_HOST}

  db-postgresql-migrations: # This container will apply the migrations continously
    user: "${UID}:${GID}"
    build:
      context: src/db_postgresql
      dockerfile: Dockerfile.migrations.dev
    container_name: mfat-db-postgresql-migrations
    labels:
      - maintainer="Jojo Calabra"
    # image: migrate/migrate:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      DB_POSTGRESQL_PORT_DOCKER: ${DB_POSTGRESQL_PORT_DOCKER}
    volumes:
      # Changes to the migration files in this directory will trigger the migration process
      - ./src/db_postgresql/migrations:/migrations:ro
    networks:
      - db-network
    links:
      - db-postgresql
    stop_grace_period: 250ms
    depends_on:
      - db-postgresql

  vue3-app:
    user: "${UID}:${GID}"
    container_name: mfat-vue3-app
    build:
      context: src/app_vue3
      dockerfile: Dockerfile.dev
    env_file:
      - .env # CREDENTAILS FOR INTERNAL PORTS, etc.
    ports:
      # Ports are loaded from the .env. If no port was specified, default values are used
      - "${APP_VUE3_PORT_DOCKER:-56123}:${APP_VUE3_PORT_HOST:-8080}"
    volumes:
      - ./src/app_vue3:/app:rw
      - ./src/app_vue3/node_modules:/app/node_modules:rw
    stop_grace_period: 500ms
    depends_on:
      - db-postgresql

  api-server-cpp:
    container_name: mfat-api-server-cpp
    build: 
      context: src/api_server_cpp
      dockerfile: Dockerfile.dev
    ports:
      - "${API_SERVER_CPP_PORT_DOCKER:-53311}:${API_SERVER_CPP_PORT_HOST:-53311}"
    env_file:
      - .env # CREDENTAILS FOR DB CONNECTION, etc.
    volumes:
      - ./src/api_server_cpp:/src:rw
    stop_grace_period: 500ms
    depends_on:
      - db-postgresql
    networks:
      - db-network

  # TODO ATTENTION! implement go server before uncommenting again, otherwise containers will fail to start
  # api-server-go:
  #   user: "${UID}:${GID}"
  #   container_name: mfat-api-server-go
  #   build:
  #     context: src/server
  #     dockerfile: Dockerfile.dev
  #   ports:
  #     # Ports are loaded from the .env. If no port was specified, default values are used
  #     - "${API_SERVER_GO_PORT_DOCKER:-59321}:${API_SERVER_GO_PORT_HOST:-59321}"
  #   depends_on:
  #     - db-postgresql
  
  # TODO @isoeli Create a container for the knowledge wiki if needed something like 'outline' will do (which you recommended, right?)

networks:
  db-network: